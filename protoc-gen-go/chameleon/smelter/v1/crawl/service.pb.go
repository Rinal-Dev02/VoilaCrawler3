// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: chameleon/smelter/v1/crawl/service.proto

package crawl

import (
	_ "github.com/voiladev/protobuf/protoc-gen-go/google/api"
	_ "github.com/voiladev/protobuf/protoc-gen-go/openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_chameleon_smelter_v1_crawl_service_proto protoreflect.FileDescriptor

var file_chameleon_smelter_v1_crawl_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2f, 0x73, 0x6d, 0x65, 0x6c,
	0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x68, 0x61, 0x6d,
	0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x30, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2f, 0x73, 0x6d, 0x65,
	0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xe0, 0x04, 0x0a, 0x0e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x92, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65,
	0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65,
	0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12,
	0x1a, 0x2f, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x63, 0x68, 0x61,
	0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6d,
	0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x12, 0x1f, 0x2f, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x43, 0x72, 0x61,
	0x77, 0x6c, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e,
	0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x26, 0x2f, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x3a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x8f, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x6f,
	0x6e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65,
	0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x55, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x28, 0x2f, 0x73,
	0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x6e,
	0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x32, 0xa1, 0x02, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x86, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e,
	0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x88, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x68,
	0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c,
	0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x73,
	0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x32, 0xb5, 0x01, 0x0a, 0x07, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x6d, 0x0a, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x28, 0x2e, 0x63,
	0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x2e, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x3a,
	0x01, 0x2a, 0x42, 0x81, 0x02, 0x5a, 0x20, 0x63, 0x68, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e,
	0x2f, 0x73, 0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x3b, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x92, 0x41, 0xdb, 0x01, 0x12, 0x63, 0x0a, 0x10, 0x73,
	0x6d, 0x65, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x22,
	0x42, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x72, 0x12, 0x28, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6d,
	0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x64, 0x65, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x1a, 0x10, 0x6b, 0x76, 0x63, 0x6e, 0x6f, 0x77, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x32, 0x0b, 0x5f, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x5f,
	0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x12, 0x0a, 0x03, 0x34, 0x30, 0x33, 0x12,
	0x0b, 0x0a, 0x09, 0xe6, 0x9c, 0xaa, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x52, 0x21, 0x0a, 0x03,
	0x34, 0x30, 0x34, 0x12, 0x1a, 0x0a, 0x18, 0xe6, 0x9c, 0xaa, 0xe6, 0x89, 0xbe, 0xe5, 0x88, 0xb0,
	0xe6, 0x88, 0x96, 0xe8, 0x80, 0x85, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x52,
	0x15, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x0e, 0x0a, 0x0c, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_chameleon_smelter_v1_crawl_service_proto_goTypes = []interface{}{
	(*GetCrawlersRequest)(nil),     // 0: chameleon.smelter.v1.crawl.GetCrawlersRequest
	(*GetCrawlerRequest)(nil),      // 1: chameleon.smelter.v1.crawl.GetCrawlerRequest
	(*CordonCrawlerRequest)(nil),   // 2: chameleon.smelter.v1.crawl.CordonCrawlerRequest
	(*UncordonCrawlerRequest)(nil), // 3: chameleon.smelter.v1.crawl.UncordonCrawlerRequest
	(*GetNodesRequest)(nil),        // 4: chameleon.smelter.v1.crawl.GetNodesRequest
	(*GetNodeRequest)(nil),         // 5: chameleon.smelter.v1.crawl.GetNodeRequest
	(*anypb.Any)(nil),              // 6: google.protobuf.Any
	(*FetchRequest)(nil),           // 7: chameleon.smelter.v1.crawl.FetchRequest
	(*GetCrawlersResponse)(nil),    // 8: chameleon.smelter.v1.crawl.GetCrawlersResponse
	(*GetCrawlerResponse)(nil),     // 9: chameleon.smelter.v1.crawl.GetCrawlerResponse
	(*emptypb.Empty)(nil),          // 10: google.protobuf.Empty
	(*GetNodesResponse)(nil),       // 11: chameleon.smelter.v1.crawl.GetNodesResponse
	(*GetNodeResponse)(nil),        // 12: chameleon.smelter.v1.crawl.GetNodeResponse
}
var file_chameleon_smelter_v1_crawl_service_proto_depIdxs = []int32{
	0,  // 0: chameleon.smelter.v1.crawl.CrawlerManager.GetCrawlers:input_type -> chameleon.smelter.v1.crawl.GetCrawlersRequest
	1,  // 1: chameleon.smelter.v1.crawl.CrawlerManager.GetCrawler:input_type -> chameleon.smelter.v1.crawl.GetCrawlerRequest
	2,  // 2: chameleon.smelter.v1.crawl.CrawlerManager.CordonCrawler:input_type -> chameleon.smelter.v1.crawl.CordonCrawlerRequest
	3,  // 3: chameleon.smelter.v1.crawl.CrawlerManager.UncordonCrawler:input_type -> chameleon.smelter.v1.crawl.UncordonCrawlerRequest
	4,  // 4: chameleon.smelter.v1.crawl.NodeManager.GetNodes:input_type -> chameleon.smelter.v1.crawl.GetNodesRequest
	5,  // 5: chameleon.smelter.v1.crawl.NodeManager.GetNode:input_type -> chameleon.smelter.v1.crawl.GetNodeRequest
	6,  // 6: chameleon.smelter.v1.crawl.Gateway.Channel:input_type -> google.protobuf.Any
	7,  // 7: chameleon.smelter.v1.crawl.Gateway.Fetch:input_type -> chameleon.smelter.v1.crawl.FetchRequest
	8,  // 8: chameleon.smelter.v1.crawl.CrawlerManager.GetCrawlers:output_type -> chameleon.smelter.v1.crawl.GetCrawlersResponse
	9,  // 9: chameleon.smelter.v1.crawl.CrawlerManager.GetCrawler:output_type -> chameleon.smelter.v1.crawl.GetCrawlerResponse
	10, // 10: chameleon.smelter.v1.crawl.CrawlerManager.CordonCrawler:output_type -> google.protobuf.Empty
	10, // 11: chameleon.smelter.v1.crawl.CrawlerManager.UncordonCrawler:output_type -> google.protobuf.Empty
	11, // 12: chameleon.smelter.v1.crawl.NodeManager.GetNodes:output_type -> chameleon.smelter.v1.crawl.GetNodesResponse
	12, // 13: chameleon.smelter.v1.crawl.NodeManager.GetNode:output_type -> chameleon.smelter.v1.crawl.GetNodeResponse
	6,  // 14: chameleon.smelter.v1.crawl.Gateway.Channel:output_type -> google.protobuf.Any
	10, // 15: chameleon.smelter.v1.crawl.Gateway.Fetch:output_type -> google.protobuf.Empty
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_chameleon_smelter_v1_crawl_service_proto_init() }
func file_chameleon_smelter_v1_crawl_service_proto_init() {
	if File_chameleon_smelter_v1_crawl_service_proto != nil {
		return
	}
	file_chameleon_smelter_v1_crawl_service_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chameleon_smelter_v1_crawl_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_chameleon_smelter_v1_crawl_service_proto_goTypes,
		DependencyIndexes: file_chameleon_smelter_v1_crawl_service_proto_depIdxs,
	}.Build()
	File_chameleon_smelter_v1_crawl_service_proto = out.File
	file_chameleon_smelter_v1_crawl_service_proto_rawDesc = nil
	file_chameleon_smelter_v1_crawl_service_proto_goTypes = nil
	file_chameleon_smelter_v1_crawl_service_proto_depIdxs = nil
}
