# encoding=utf8
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chameleon.security.identity import data_pb2 as chameleon_dot_security_dot_identity_dot_data__pb2
from chameleon.security.identity import service_message_pb2 as chameleon_dot_security_dot_identity_dot_service__message__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class RoleManagerStub(object):
    """RoleManager
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/Get',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetRoleRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.Role.FromString,
                )
        self.List = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/List',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListRoleRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListRoleResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/Create',
                request_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.Role.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.Role.FromString,
                )
        self.Update = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/Update',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddRule = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/AddRule',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddRoleRuleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ResetRule = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/ResetRule',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetRoleRuleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteRule = channel.unary_unary(
                '/chameleon.security.identity.RoleManager/DeleteRule',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteRoleRuleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleManagerServicer(object):
    """RoleManager
    """

    def Get(self, request, context):
        """获得一个角色
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """列出角色列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """创建角色
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """更新角色信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRule(self, request, context):
        """AddRule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetRule(self, request, context):
        """ResetRule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRule(self, request, context):
        """DeleteRule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetRoleRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.Role.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListRoleRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListRoleResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.Role.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.Role.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddRule': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRule,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddRoleRuleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResetRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetRule,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetRoleRuleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRule,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteRoleRuleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chameleon.security.identity.RoleManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleManager(object):
    """RoleManager
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/Get',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetRoleRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.Role.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/List',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ListRoleRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ListRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/Create',
            chameleon_dot_security_dot_identity_dot_data__pb2.Role.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.Role.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/Update',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/AddRule',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.AddRoleRuleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/ResetRule',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetRoleRuleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.RoleManager/DeleteRule',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteRoleRuleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserManagerStub(object):
    """用户管理器
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Count = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Count',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountUserRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountUserResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/chameleon.security.identity.UserManager/List',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListUserRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListUserResponse.FromString,
                )
        self.Who = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Who',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.WhoResponse.FromString,
                )
        self.Exist = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Exist',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Exists = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Exists',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistsRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistsResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Get',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.User.FromString,
                )
        self.Gets = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Gets',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsUserRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsUserResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Create',
                request_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.User.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.User.FromString,
                )
        self.Update = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Update',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetRoles = channel.unary_unary(
                '/chameleon.security.identity.UserManager/GetRoles',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRolesRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRolesResponse.FromString,
                )
        self.AddRole = channel.unary_unary(
                '/chameleon.security.identity.UserManager/AddRole',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddUserRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteRole = channel.unary_unary(
                '/chameleon.security.identity.UserManager/DeleteRole',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteUserRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Delete',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Restore = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Restore',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.RestoreUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Verify = channel.unary_unary(
                '/chameleon.security.identity.UserManager/Verify',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.VerifyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserManagerServicer(object):
    """用户管理器
    """

    def Count(self, request, context):
        """返回用户总数
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """列出用户列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Who(self, request, context):
        """获得当前用户
        该方法不需要`admin`权限
        __注意：__内部User Server不需要实现这个方法
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exist(self, request, context):
        """返回是否存在某用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exists(self, request, context):
        """返回是否存在用户ID列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """获得一个用户
        __注意__： 需要security.identity.user 权限，即使id == 当前用户id。当前用户请使用`who`方法。
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Gets(self, request, context):
        """获得多个用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """创建用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """更新用户信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoles(self, request, context):
        """获得用户角色列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRole(self, request, context):
        """增加用户角色
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRole(self, request, context):
        """删除用户角色
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """删除用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Restore(self, request, context):
        """恢复用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Verify(self, request, context):
        """Verify
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountUserRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountUserResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListUserRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListUserResponse.SerializeToString,
            ),
            'Who': grpc.unary_unary_rpc_method_handler(
                    servicer.Who,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.WhoResponse.SerializeToString,
            ),
            'Exist': grpc.unary_unary_rpc_method_handler(
                    servicer.Exist,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Exists': grpc.unary_unary_rpc_method_handler(
                    servicer.Exists,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistsRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistsResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.User.SerializeToString,
            ),
            'Gets': grpc.unary_unary_rpc_method_handler(
                    servicer.Gets,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsUserRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsUserResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.User.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.User.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoles,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRolesRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRolesResponse.SerializeToString,
            ),
            'AddRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRole,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddUserRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRole,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteUserRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Restore': grpc.unary_unary_rpc_method_handler(
                    servicer.Restore,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.RestoreUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Verify': grpc.unary_unary_rpc_method_handler(
                    servicer.Verify,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.VerifyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chameleon.security.identity.UserManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserManager(object):
    """用户管理器
    """

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Count',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.CountUserRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.CountUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/List',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ListUserRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ListUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Who(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Who',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.WhoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Exist',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Exists',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistsRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.IsUserExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Get',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Gets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Gets',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsUserRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Create',
            chameleon_dot_security_dot_identity_dot_data__pb2.User.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Update',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/GetRoles',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRolesRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetUserRolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/AddRole',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.AddUserRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/DeleteRole',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteUserRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Delete',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Restore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Restore',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.RestoreUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.UserManager/Verify',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.VerifyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ApplicationManagerStub(object):
    """应用管理器
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Count = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Count',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountApplicationRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountApplicationResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/List',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListApplicationRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListApplicationResponse.FromString,
                )
        self.Exist = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Exist',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Exists = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Exists',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistsRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistsResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Get',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.Application.FromString,
                )
        self.Gets = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Gets',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsApplicationRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsApplicationResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Create',
                request_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.Application.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.Application.FromString,
                )
        self.Update = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Update',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateApplicationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Delete',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Restore = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/Restore',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.RestoreApplicationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetOptions = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/SetOptions',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationOptionsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetTags = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/SetTags',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationTagsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ResetSecret = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/ResetSecret',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetApplicationSecretRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetApplicationSecretResponse.FromString,
                )
        self.GetSecretKey = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/GetSecretKey',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationSecretKeyRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.FromString,
                )
        self.GetSecretPublicKey = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/GetSecretPublicKey',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationSecretPublicKeyRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.FromString,
                )
        self.AddSecretKey = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/AddSecretKey',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationSecretKeyRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.FromString,
                )
        self.SetDefaultSecretKey = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/SetDefaultSecretKey',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationDefaultSecretKeyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteSecretKey = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/DeleteSecretKey',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationSecretKeyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetDefaultRedirectURI = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/GetDefaultRedirectURI',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationDefaultRedirectURIRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationDefaultRedirectURIResponse.FromString,
                )
        self.SetDefaultRedirectURI = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/SetDefaultRedirectURI',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationDefaultRedirectURIRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetWhiteRedirectURIs = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/GetWhiteRedirectURIs',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationWhiteRedirectURIsRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationWhiteRedirectURIsResponse.FromString,
                )
        self.AddWhiteRedirectURI = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/AddWhiteRedirectURI',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationWhiteRedirectURIRequest.SerializeToString,
                response_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationWhiteRedirectURI.FromString,
                )
        self.DeleteWhiteRedirectURI = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/DeleteWhiteRedirectURI',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationWhiteRedirectURIRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ClearWhiteRedirectURIs = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/ClearWhiteRedirectURIs',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ClearApplicationWhiteRedirectURIsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddApplicationRole = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/AddApplicationRole',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.RemoveApplicationRole = channel.unary_unary(
                '/chameleon.security.identity.ApplicationManager/RemoveApplicationRole',
                request_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.RemoveApplicationRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class ApplicationManagerServicer(object):
    """应用管理器
    """

    def Count(self, request, context):
        """返回应用总数
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """列出所有应用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exist(self, request, context):
        """返回是否存在某用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exists(self, request, context):
        """返回是否存在应用ID列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """获得一个应用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Gets(self, request, context):
        """获得多个应用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """创建一个应用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """更新应用信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """删除一个应用
        删除应用并不会真正的删除数据，而是设置删除位
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Restore(self, request, context):
        """恢复一个应用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOptions(self, request, context):
        """设置应用配置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTags(self, request, context):
        """设置标签
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetSecret(self, request, context):
        """重置Secret
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSecretKey(self, request, context):
        """获得SecretKey
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSecretPublicKey(self, request, context):
        """获得SecretKey的公开部分
        __注意：__这个请求不做认证限制，公开部分默认是向所有人开放的
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSecretKey(self, request, context):
        """添加SecretKey
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultSecretKey(self, request, context):
        """设置默认的SecretKey
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSecretKey(self, request, context):
        """删除SecretKey
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultRedirectURI(self, request, context):
        """获得默认的跳转URI
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultRedirectURI(self, request, context):
        """设置默认的跳转URI
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWhiteRedirectURIs(self, request, context):
        """获得跳转地址白名单列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddWhiteRedirectURI(self, request, context):
        """添加跳转地址白名单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWhiteRedirectURI(self, request, context):
        """删除跳转地址白名单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearWhiteRedirectURIs(self, request, context):
        """清空跳转地址白名单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddApplicationRole(self, request, context):
        """添加应用Role
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveApplicationRole(self, request, context):
        """删除应用Role
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApplicationManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountApplicationRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.CountApplicationResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListApplicationRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ListApplicationResponse.SerializeToString,
            ),
            'Exist': grpc.unary_unary_rpc_method_handler(
                    servicer.Exist,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Exists': grpc.unary_unary_rpc_method_handler(
                    servicer.Exists,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistsRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistsResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.Application.SerializeToString,
            ),
            'Gets': grpc.unary_unary_rpc_method_handler(
                    servicer.Gets,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsApplicationRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsApplicationResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_data__pb2.Application.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.Application.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateApplicationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Restore': grpc.unary_unary_rpc_method_handler(
                    servicer.Restore,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.RestoreApplicationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOptions,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationOptionsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetTags': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTags,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationTagsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResetSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetSecret,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetApplicationSecretRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetApplicationSecretResponse.SerializeToString,
            ),
            'GetSecretKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecretKey,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationSecretKeyRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.SerializeToString,
            ),
            'GetSecretPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecretPublicKey,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationSecretPublicKeyRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.SerializeToString,
            ),
            'AddSecretKey': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSecretKey,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationSecretKeyRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.SerializeToString,
            ),
            'SetDefaultSecretKey': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultSecretKey,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationDefaultSecretKeyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteSecretKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSecretKey,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationSecretKeyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDefaultRedirectURI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultRedirectURI,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationDefaultRedirectURIRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationDefaultRedirectURIResponse.SerializeToString,
            ),
            'SetDefaultRedirectURI': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultRedirectURI,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationDefaultRedirectURIRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetWhiteRedirectURIs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWhiteRedirectURIs,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationWhiteRedirectURIsRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationWhiteRedirectURIsResponse.SerializeToString,
            ),
            'AddWhiteRedirectURI': grpc.unary_unary_rpc_method_handler(
                    servicer.AddWhiteRedirectURI,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationWhiteRedirectURIRequest.FromString,
                    response_serializer=chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationWhiteRedirectURI.SerializeToString,
            ),
            'DeleteWhiteRedirectURI': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWhiteRedirectURI,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationWhiteRedirectURIRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ClearWhiteRedirectURIs': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearWhiteRedirectURIs,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.ClearApplicationWhiteRedirectURIsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddApplicationRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddApplicationRole,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveApplicationRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveApplicationRole,
                    request_deserializer=chameleon_dot_security_dot_identity_dot_service__message__pb2.RemoveApplicationRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chameleon.security.identity.ApplicationManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ApplicationManager(object):
    """应用管理器
    """

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Count',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.CountApplicationRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.CountApplicationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/List',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ListApplicationRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ListApplicationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Exist',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Exists',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistsRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.IsApplicationExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Get',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.Application.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Gets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Gets',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsApplicationRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetsApplicationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Create',
            chameleon_dot_security_dot_identity_dot_data__pb2.Application.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.Application.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Update',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.UpdateApplicationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Delete',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Restore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/Restore',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.RestoreApplicationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/SetOptions',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationOptionsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/SetTags',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationTagsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/ResetSecret',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetApplicationSecretRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ResetApplicationSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSecretKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/GetSecretKey',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationSecretKeyRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSecretPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/GetSecretPublicKey',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationSecretPublicKeyRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSecretKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/AddSecretKey',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationSecretKeyRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationSecretKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultSecretKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/SetDefaultSecretKey',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationDefaultSecretKeyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSecretKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/DeleteSecretKey',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationSecretKeyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultRedirectURI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/GetDefaultRedirectURI',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationDefaultRedirectURIRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationDefaultRedirectURIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultRedirectURI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/SetDefaultRedirectURI',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.SetApplicationDefaultRedirectURIRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWhiteRedirectURIs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/GetWhiteRedirectURIs',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationWhiteRedirectURIsRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_service__message__pb2.GetApplicationWhiteRedirectURIsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddWhiteRedirectURI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/AddWhiteRedirectURI',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationWhiteRedirectURIRequest.SerializeToString,
            chameleon_dot_security_dot_identity_dot_data__pb2.ApplicationWhiteRedirectURI.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWhiteRedirectURI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/DeleteWhiteRedirectURI',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.DeleteApplicationWhiteRedirectURIRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearWhiteRedirectURIs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/ClearWhiteRedirectURIs',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.ClearApplicationWhiteRedirectURIsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddApplicationRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/AddApplicationRole',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.AddApplicationRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveApplicationRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chameleon.security.identity.ApplicationManager/RemoveApplicationRole',
            chameleon_dot_security_dot_identity_dot_service__message__pb2.RemoveApplicationRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
