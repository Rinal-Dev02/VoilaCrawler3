# encoding=utf8
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chameleon/api/rest/querysort.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='chameleon/api/rest/querysort.proto',
  package='chameleon.api.rest',
  syntax='proto3',
  serialized_options=b'\n\026com.chameleon.api.restB\016QuerySortProtoP\001Z\027chameleon/api/rest;rest',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\"chameleon/api/rest/querysort.proto\x12\x12\x63hameleon.api.rest\"\x9c\x01\n\x05Query\x12+\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x1c.chameleon.api.rest.AndQueryH\x00\x12)\n\x02or\x18\x02 \x01(\x0b\x32\x1b.chameleon.api.rest.OrQueryH\x00\x12\x32\n\tcondition\x18\x03 \x01(\x0b\x32\x1d.chameleon.api.rest.ConditionH\x00\x42\x07\n\x05Query\"5\n\x08\x41ndQuery\x12)\n\x06values\x18\x01 \x03(\x0b\x32\x19.chameleon.api.rest.Query\"4\n\x07OrQuery\x12)\n\x06values\x18\x01 \x03(\x0b\x32\x19.chameleon.api.rest.Query\":\n\tCondition\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\x0e\n\x06values\x18\x03 \x03(\t\"3\n\x04Sort\x12+\n\x05rules\x18\x01 \x03(\x0b\x32\x1c.chameleon.api.rest.SortRule\"+\n\x08SortRule\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x12\n\ndescending\x18\x02 \x01(\x08\x42\x43\n\x16\x63om.chameleon.api.restB\x0eQuerySortProtoP\x01Z\x17\x63hameleon/api/rest;restb\x06proto3'
)




_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='chameleon.api.rest.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='and', full_name='chameleon.api.rest.Query.and', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='or', full_name='chameleon.api.rest.Query.or', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='condition', full_name='chameleon.api.rest.Query.condition', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Query', full_name='chameleon.api.rest.Query.Query',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=59,
  serialized_end=215,
)


_ANDQUERY = _descriptor.Descriptor(
  name='AndQuery',
  full_name='chameleon.api.rest.AndQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='chameleon.api.rest.AndQuery.values', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=270,
)


_ORQUERY = _descriptor.Descriptor(
  name='OrQuery',
  full_name='chameleon.api.rest.OrQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='chameleon.api.rest.OrQuery.values', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=272,
  serialized_end=324,
)


_CONDITION = _descriptor.Descriptor(
  name='Condition',
  full_name='chameleon.api.rest.Condition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='chameleon.api.rest.Condition.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='operator', full_name='chameleon.api.rest.Condition.operator', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='values', full_name='chameleon.api.rest.Condition.values', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=326,
  serialized_end=384,
)


_SORT = _descriptor.Descriptor(
  name='Sort',
  full_name='chameleon.api.rest.Sort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='chameleon.api.rest.Sort.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=386,
  serialized_end=437,
)


_SORTRULE = _descriptor.Descriptor(
  name='SortRule',
  full_name='chameleon.api.rest.SortRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='chameleon.api.rest.SortRule.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='descending', full_name='chameleon.api.rest.SortRule.descending', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=439,
  serialized_end=482,
)

_QUERY.fields_by_name['and'].message_type = _ANDQUERY
_QUERY.fields_by_name['or'].message_type = _ORQUERY
_QUERY.fields_by_name['condition'].message_type = _CONDITION
_QUERY.oneofs_by_name['Query'].fields.append(
  _QUERY.fields_by_name['and'])
_QUERY.fields_by_name['and'].containing_oneof = _QUERY.oneofs_by_name['Query']
_QUERY.oneofs_by_name['Query'].fields.append(
  _QUERY.fields_by_name['or'])
_QUERY.fields_by_name['or'].containing_oneof = _QUERY.oneofs_by_name['Query']
_QUERY.oneofs_by_name['Query'].fields.append(
  _QUERY.fields_by_name['condition'])
_QUERY.fields_by_name['condition'].containing_oneof = _QUERY.oneofs_by_name['Query']
_ANDQUERY.fields_by_name['values'].message_type = _QUERY
_ORQUERY.fields_by_name['values'].message_type = _QUERY
_SORT.fields_by_name['rules'].message_type = _SORTRULE
DESCRIPTOR.message_types_by_name['Query'] = _QUERY
DESCRIPTOR.message_types_by_name['AndQuery'] = _ANDQUERY
DESCRIPTOR.message_types_by_name['OrQuery'] = _ORQUERY
DESCRIPTOR.message_types_by_name['Condition'] = _CONDITION
DESCRIPTOR.message_types_by_name['Sort'] = _SORT
DESCRIPTOR.message_types_by_name['SortRule'] = _SORTRULE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
  'DESCRIPTOR' : _QUERY,
  '__module__' : 'chameleon.api.rest.querysort_pb2'
  # @@protoc_insertion_point(class_scope:chameleon.api.rest.Query)
  })
_sym_db.RegisterMessage(Query)

AndQuery = _reflection.GeneratedProtocolMessageType('AndQuery', (_message.Message,), {
  'DESCRIPTOR' : _ANDQUERY,
  '__module__' : 'chameleon.api.rest.querysort_pb2'
  # @@protoc_insertion_point(class_scope:chameleon.api.rest.AndQuery)
  })
_sym_db.RegisterMessage(AndQuery)

OrQuery = _reflection.GeneratedProtocolMessageType('OrQuery', (_message.Message,), {
  'DESCRIPTOR' : _ORQUERY,
  '__module__' : 'chameleon.api.rest.querysort_pb2'
  # @@protoc_insertion_point(class_scope:chameleon.api.rest.OrQuery)
  })
_sym_db.RegisterMessage(OrQuery)

Condition = _reflection.GeneratedProtocolMessageType('Condition', (_message.Message,), {
  'DESCRIPTOR' : _CONDITION,
  '__module__' : 'chameleon.api.rest.querysort_pb2'
  # @@protoc_insertion_point(class_scope:chameleon.api.rest.Condition)
  })
_sym_db.RegisterMessage(Condition)

Sort = _reflection.GeneratedProtocolMessageType('Sort', (_message.Message,), {
  'DESCRIPTOR' : _SORT,
  '__module__' : 'chameleon.api.rest.querysort_pb2'
  # @@protoc_insertion_point(class_scope:chameleon.api.rest.Sort)
  })
_sym_db.RegisterMessage(Sort)

SortRule = _reflection.GeneratedProtocolMessageType('SortRule', (_message.Message,), {
  'DESCRIPTOR' : _SORTRULE,
  '__module__' : 'chameleon.api.rest.querysort_pb2'
  # @@protoc_insertion_point(class_scope:chameleon.api.rest.SortRule)
  })
_sym_db.RegisterMessage(SortRule)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
